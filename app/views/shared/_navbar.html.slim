nav.navbar.main-navbar
  .container
    = link_to user_signed_in? ? :dashboard : root_path, class: 'navbar-brand' do
      = image_tag 'turtle_dark.svg', height: 15, width: 38, alt: ''
      span.hidden-xs<= APP_CONFIG.app_name
    button.navbar-toggler.navbar-toggler-right type='button' data-toggle='collapse' data-target='#main-navbar-collapse' aria-controls='main-navbar-collapse' aria-expanded='false' aria-label=t('.toggle_navigation')
      span.navbar-toggler-icon
    - if user_signed_in?
      == render 'shared/notifications'
      #main-navbar-collapse.collapse.navbar-collapse
        ul.navbar-nav.main-navbar-nav
          li.nav-item#navbar-user-info
            = link_to user_path(current_user), class: 'nav-profile-link' do
              = user_profile_picture current_user, size: nil, style: nil
              span.nav-profile-link__user-name= current_user
          li.nav-item.dropdown
            a.nav-link.dropdown-toggle#main-navbar-dropdown href='#' role='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'
              span.fa.fa-cog aria-hidden='true'
              span.sr-only= t('.settings')
            .dropdown-menu.dropdown-menu-right aria-labelledby='main-navbar-dropdown'
              = link_to t('.account_settings'), :settings, class: 'dropdown-item'
              - if current_user.admin?
                .dropdown-divider
                = link_to t('.admin_users'), admin_users_path, class: 'dropdown-item'
              .dropdown-divider
              = link_to t('logout'), destroy_user_session_path, method: :delete, class: 'dropdown-item'
    - else
      .navbar-collapse.collapse#main-navbar-collapse role='navigation'
        ul.nav.navbar-nav.navbar-right
          li= link_to t('how_it_works'), :how_it_works
          li= link_to t('about'), :about
          li.dropdown
            = link_to '#', data: { toggle: 'dropdown' }, class: 'dropdown-toggle' do
              = t('lang_native_name')
              span.caret
            ul.dropdown-menu
              - (I18n.available_locales - [I18n.locale]).each do |locale|
                li=link_to t('lang_native_name', locale: locale), url_for(locale: locale)
          li.facebook-link
            = link_to user_facebook_omniauth_authorize_path, data: { turbolinks: false } do
              span.fab.fa-facebook-size<>
              = t('login_with_facebook')
